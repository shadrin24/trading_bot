from core.api_client import BybitClient
from strategies.signals import WolfixParser, SignalExecutor
from loguru import logger

def test_signal_parser():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞, –ø–∞—Ä—Å–µ—Ä–∞ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    client = BybitClient()
    parser = WolfixParser(client)
    executor = SignalExecutor(client)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª Wolfix
    test_signal = """üîîCRYPTO VIP SIGNAL (https://wolfxsignals.com/plans-lp/)üîî

ETH/USDT üìâ BUY 

üîπEntry zone: 2480-2500 

üí∞TP1 2600
üí∞TP2 2700
üí∞TP3 2800
üö´SL 2400

„ÄΩÔ∏èLeverage 10x"""
    
    # –ü–∞—Ä—Å–∏–Ω–≥ —Å–∏–≥–Ω–∞–ª–∞
    signal_data = parser.parse_signal(test_signal)
    if not signal_data:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å–∏–≥–Ω–∞–ª")
        return
        
    logger.info(f"–†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π —Å–∏–≥–Ω–∞–ª: {signal_data}")
    logger.info(f"–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–∏–≥–Ω–∞–ª–∞: {signal_data['parser']}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –≤—Ö–æ–¥–∞
    if executor.check_entry_conditions(signal_data):
        logger.info("–£—Å–ª–æ–≤–∏—è –≤—Ö–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
        executor.execute_signal(signal_data)  # –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    else:
        logger.info("–£—Å–ª–æ–≤–∏—è –≤—Ö–æ–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")

if __name__ == "__main__":
    test_signal_parser() 